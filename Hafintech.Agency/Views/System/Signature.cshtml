<div style="padding: 0 20px 0 20px; margin: auto" id="sigId">
	<div class="row-fluid">
		<div class="span12">
			<div class="span12" style="border-bottom: 1px solid #808080; margin-bottom: 5px">
				<h4 style="text-transform: uppercase">Thiết lập thông số mặc định</h4>
			</div>

			<div class="row-fluid">
				<h5 id="nameCompany"></h5>
			</div>

			<div class="row-fluid" style="margin-bottom: 20px">
				<a href="@Url.Action("SetupVNACCS", "System")" class="btn btn-default" style="padding: 8px 20px 8px 20px;"> Cài đặt VNACCS</a>
				<a href="javascript:;" class="btn btn-warning" style="padding: 8px 20px 8px 20px;"> Chữ ký số</a>
			</div>

		</div>
	</div>

	<div class="row-fluid">

		<div class="row-fluid">
			<div class="span3">
				<p style="text-align: center">
					<b>Tải về phần mềm sử dụng USB để ký</b><br />
					(Máy tính của bạn phải cài phần mềm này để dùng CKS bằng USB)
				</p>
			</div>
			<div class="span3">
				<a href="javascript:;" v-on:click="download()">
					<i class="fa fa-download" style="color: #078f1b"></i> Tại đây
				</a>
			</div>
		</div>

		<div class="form-horizontal" style="padding:10px; margin-top: 20px">

			<input v-if="showCheckbox" type="checkbox" v-bind:checked="submitMethod == 0" v-on:click="selectSubmit(0)" /> Sử dụng chữ ký số đang cắm vào máy tính của bạn

			<div class="row-fluid">
				<div class="span12">
					<div class="control-group1">
						<label style="width: 15%; display: inline-block;">Chọn chữ ký số bên dưới</label>
						<br />
						<div class="main_input_box" style="width: 30%;">
							<input type="text" class="span12" id="codeBusiness" name="codeBusiness" style="width:100%;" placeholder="" />
						</div>

					</div>
				</div>
			</div>

			<div class="row-fluid">
				<div class="span12">
					<div class="control-group1">
						<span>Tính năng này sử dụng trong trường hợp máy tính đang chạy chương trình phải có chữ ký số cắm vào</span>
					</div>
				</div>
			</div>

			<div class="row-fluid">
				<div class="span12">
					<div class="control-group1">
						<input v-if="showCheckbox" type="checkbox" v-bind:checked="submitMethod == 1" v-on:click="selectSubmit(1)" /> Gửi file chữ ký số lên hệ thống
					</div>
				</div>
			</div>

			<div class="row-fluid">
				<div class="span12">
					<div class="control-group1">
						<input type="file" class="form-control" id="fileAttach" ref="myFiles" accept=".p12, application/x-pkcs12" />
						<p id="nameFileAttach">{{nameFileAttach}}</p>
					</div>
				</div>
			</div>


		</div>

		<div class="form-actions" style="">
			<a href="javascript:;" v-on:click="Save()" class="btn btn-success" style="padding: 7px 35px;">Lưu lại</a>
		</div>

		<input type="hidden" value="0" id="submitMethod" />
	</div>
</div>

<script>
    var app = new Vue({
        el: '#sigId',
        data: {
            data: {
            },
            showCheckbox: false, //mặc định chưa show
            nameFileAttach: "", //tên file chữ ký số lên hệ thống
            submitMethod: null, //0: USB 1: TT
            signatureId: null, //Id signature

            files: [],//file chữ ký số
        },
        methods: {
            init: async function () {
                var self = this;
                //show checkbox
                setTimeout(function () {
                    self.showCheckbox = true;
                }, 100);

                this.GetInfoSignalture();
                this.getInfo();
            },
            //get name file attach và SignatureId
            GetInfoSignalture: function () {
                var accountId = utils.getCookie("accountIdBuss");

                var self = this;
                var token = $('#hdfToken').val();
                //utils.Loading();
                $.ajax({
                    type: 'POST',
                    url: Config.API_Login + "Agency/GetSignature?accountId=" + accountId,
                    data: {
                    },
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (data) {
                        ///utils.unLoading();
                        if (data.ResponseCode > 0 && data.Data && data.Data.length > 0) {
                            var item = data.Data[0];
                            self.nameFileAttach = item.path;
                            self.signatureId = item.signatureId;
                        }

                    },
                    error: function (data) {
                        //utils.unLoading();
                        bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                        return;
                    }
                });
            },
            //get check box
            getInfo: function () {
                var self = this;

                var id = $("#accIdLogin").val();
                var type = utils.getCookie("Type");
                //Nếu là Nhân viên DN thì show thông tin của ĐL
                if (type == 1) {
                    id = utils.getCookie("accountIdBuss");
                }
                var token = $('#hdfToken').val();
                $.ajax({
                    type: 'GET',
                    url: Config.API_Login + "account/GetInfoByAccountID",
                    data: {
                        accountID: id,
                    },
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.ResponseCode > 0 && data.Data.Accounts) {
                            var bu = data.Data.Business;
                            self.submitMethod = bu.submitMethod;
                        }

                    },
                    error: function (data) {
                        bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                    }
                });
            },
            //select submit
            selectSubmit: function (submit) {
                if ((this.submitMethod == 0 && submit == 0) || (this.submitMethod == 1 && submit == 1))
                    this.submitMethod = null;
                else
                    this.submitMethod = submit;
			},
			//=============
			Save: function () {
				if (this.submitMethod == 0)
					this.SetSignMethod();
				else
					this.SaveFile();
			},
            SaveFile: function () {
                var self = this;
                var accountId = utils.getCookie("accountIdBuss");//$("#accIdLogin").val();
                if (!self.signatureId) self.signatureId = null;

                var jsonData = { "signatureId": self.signatureId, "accountId": accountId, "status": 1 };

                if (!this.submitMethod && this.submitMethod != 0) {
                    bootbox.alert("Bạn chưa chọn loại chữ ký số");
                    return;
                }

                this.files = this.$refs.myFiles.files
                if (this.files.length != 0) {
                    var size = parseFloat(self.files[0].size / 1024).toFixed(2);

                    if (size > 5000) {
                        bootbox.alert("Dung lượng file up lên không được quá 5M");
                        return;
                    }

                    if (self.files[0].type != "application/x-pkcs12") {
                        bootbox.alert("File chữ ký phải có đuôi là .p12");
                        return;
                    }
                }

                var formData = new FormData();
                for (var i = 0; i < self.files.length; i++) {
                    formData.append(self.files[i].name, self.files[i]);
                }
                formData.append("jsonData", JSON.stringify(jsonData));

                var token = $('#hdfToken').val();
                utils.Loading();
                $.ajax({
                    type: 'POST',
                    url: Config.API_Login + "Agency/CreateSignature",
                    data: formData,
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        console.log("InsertRegNumber: ", data);

                        if (data.ResponseCode > 0) {

                            self.SetSignMethod();
                        }
                        else {
                            utils.unLoading();
                            bootbox.alert(data.Description);
                        }
                    },
                    error: function (data) {
                        utils.unLoading();
                        bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                        return;
                    }
                });
            },
            SetSignMethod: function () {
                var token = $('#hdfToken').val();
                var submitMethod = this.submitMethod;
                var businessId = utils.getCookie("businessIdAcc");
                $.ajax({
                    type: 'GET',
                    url: Config.API_Login + "Agency/SetSubmitMethod",
                    data: {
                        businessId: businessId,
                        submitMethod: submitMethod,
                    },
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        console.log("submitMethod: ", data);
                        utils.unLoading();
                        if (data.ResponseCode > 0) {
                            bootbox.alert("Thành công", function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function (data) {
                        utils.unLoading();
                        bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                        return;
                    }
                });
            },
            //
            download: function () {
                window.location.href = Config.linkDownSign;
            }
        },
        mounted() {
            this.init();
            Act.CheckActiveAcc();
        },
    });
</script>
