
<div class="container-fluid" id="list-ama">
    <div class="row-fluid" >
        <div class="widget-box">
            <div class="widget-title">
                <span class="icon"><i class="icon-align-justify"></i></span>
                <h5>Danh sách tờ khai AMA</h5>
            </div>
            <div class="widget-content">
				<div class="row-fluid">

					<div class="span2">
						<label>Từ ngày</label>
						<input type="date" class="span11" value="" v-model="startCreatedDate">
					</div>
					<div class="span2">
						<label>Đến ngày</label>
						<input type="date" class="span11" value="" v-model="endCreatedDate">
					</div>
					<div class="span2">
						<label>Cục Hải Quan</label>
						<select class="span11" id="slCustoms" v-model="data.cstOffice">
							<option value="">--Chọn cục HQ--</option>
							<option v-for="item in lstCustoms" v-bind:value="item.cstOfficeCd">{{item.cstOfficeCd}} || {{item.cstOfficeNm}}</option>
						</select>
					</div>
					<div class="span2">
						<label>Số Tờ khai </label>
						<input type="text" class="span11" v-model="data.dclNo" placeholder="Số Tờ khai">
					</div>
					<div class="span2">
						<div style="margin-top:25px;">
							<a v-on:click="getList()" class="btn btn-success"><i class="icon icon-search"></i> Tìm kiếm</a>
						</div>
					</div>

				</div>
                
            </div>
        </div>

		<div class="row-fluid">
			<div class="span2">
				<select class="span10" v-model="pageSize" v-on:change="getList()">
					<option value="10"> Hiện 10 dòng</option>
					<option value="25"> Hiện 25 dòng</option>
					<option value="50"> Hiện 50 dòng</option>
				</select>
			</div>
			<span>{{total}} bản ghi</span>
		</div>

        <div class="box-body" id="dvContent">
            <table id="listContainer" class="table table-bordered data-table table-striped with-check" role="grid" aria-describedby="example1_info">
                <thead>
					<tr>
						<th class="text-center" style="min-width:100px">STT</th>
						<th class="text-center" style="min-width:100px">ID</th>
						<th class="text-center" style="min-width:100px">Mã nghiệp vụ</th>
						<th class="text-center" style="min-width:100px">Số tờ khai</th>
						<th class="text-center" style="min-width:100px">Số tờ khai bổ xung</th>
						<th class="text-center">Ngày đăng ký</th>
						<th class="text-center">Phân luồng</th>
						<th class="text-center">Trạng thái</th>
						<th class="text-center">Thao tác</th>
					</tr>
                </thead>
                <tbody>
                    <tr v-show="showLoading">
                        <td colspan="14" style="text-align:center">
                            <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
                        </td>
                    </tr>

					<tr v-for="(item, index) in listAMA">
						<td class="text-center">{{index+1}}</td>
						<td><a v-on:click="viewEdit(item)">{{item.id}}</a></td>
						<td>
							{{item.statusCode}}
						</td>
						<td>
							<a v-on:click="viewEdit(item)">{{item.dclNo}}</a>
						</td>
						<td>
							<a v-on:click="viewEdit(item)">{{item.amendDclNo}}</a>
						</td>
						<td>{{item.createdDate}}</td>
						<td>
							<span v-show="item.clearanStatus == -1">Chưa thông quan</span>
							<span v-show="item.clearanStatus == 1">Thông quan</span>
							<span v-show="item.clearanStatus == 2">Đợi thông quan</span>
						</td>
						<td></td>
						<td style="text-align: center">
							<a class="btn btn-warning" v-on:click="viewEdit(item)">Sửa</a>
							<a class="btn btn-danger" v-on:click="removeDe(item.id)">Xóa</a>
						</td>
					</tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="container-fluid">
        <ul class="pagination"></ul>
    </div>
</div>

<script>
    var appAMA = new Vue({
        el: '#list-ama',
        data: {
            data: {},
            listAMA: [],
            showLoading: true,

            lstCustoms: [], 
			startCreatedDate: "",
			endCreatedDate: "",
			pageSize: 10,
			total: 0,
        },
        methods: {
            init: async function () {
                var data = this.data;
                data.cstOffice = ""; 
                data.startCreatedDate = "";
                data.endCreatedDate = "";
                data.dclNo = ""; 
                this.lstCustoms = await Lib.getCustomsOffice();  
            },
            getList: function (page){
				var self = this;

				if (!page) page = 0;
                
				var dt = this.data;
				dt.startCreatedDate = this.formatDate(this.startCreatedDate);
				dt.endCreatedDate = this.formatDate(this.endCreatedDate);
				
				var token = $('#hdfToken').val();
                $.ajax({
                    type: 'POST',
                    url: Config.API_Login + "tax/SearchAMA",
                    data: {
                        dclNo: dt.dclNo,
                        startCreatedDate: dt.startCreatedDate,
                        endCreatedDate: dt.endCreatedDate,
                        cstOffice: dt.cstOffice, 
						page: page,
						count: this.pageSize
                    },
                    headers: {
                        "Authorization": "Bearer " + token
                    }, 
                    success: function (data) {
                        //console.log(data);
                        self.showLoading = false;
                        if (data.ResponseCode >= 0)
                        {
							self.listAMA = data.Data.ListAmendedTaxInfomation;
							self.showPage(page, data.Data.Total);
							self.total = data.Data.total;
                        }
                    },
					error: function (data) {
						self.showLoading = false;
                        bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                        return;
                    }
                });
			},
			showPage: function (page, total) { 
				var totalPage = 0;
				if (total % 10 == 0) {
					totalPage = total / 10;
				}
				else {
					var du = total % 10;
					total = total - du;
					totalPage = total / 10 + 1;
				}
				var CurPage = page + 1;

				var htmlP = '';

				if (totalPage > 1) {
					htmlP += '<li><a href="javascript:;" onclick="appAMA.getList(0)"><i class="fa fa-angle-double-left"></i></a></li>';
					htmlP += '<li><a href="javascript:;" onclick="appAMA.getList(' + (page - 1 <= 0 ? 0 : page - 1) + ')"><i class="fa fa-angle-left"></i></a></li>';

					for (var i = CurPage - 3; i < CurPage + 3; i++) {
						if (i > 0 && i <= totalPage) {
							if (CurPage == i) {
								htmlP += '<li class="active"><a href="javascript:;" onclick="appAMA.getList(' + (i - 1) + ')" >' + i + '</a></li>';
							}
							else {
								htmlP += '<li><a href="javascript:;" onclick="appAMA.getList(' + (i - 1) + ')" >' + i + '</a></li>';
							}
						}
					}
					htmlP += '<li><a href="javascript:;" onclick="appAMA.getList(' + (page + 1 >= totalPage ? page : page + 1) + ')" ><i class="fa fa-angle-right"></i></a></li>';
					htmlP += '<li><a href="javascript:;" onclick="appAMA.getList(' + (totalPage - 1) + ')" ><i class="fa fa-angle-double-right"></i></a></li>';

				}

				$(".pagination").html(htmlP);

			},
            formatDate: function(date) {
                if(!date) return "";

                return moment(String(date)).format('DD-MM-YYYY')
            }, 
			viewEdit: function (item) {
				var tab = 1;
				if (item.status == 732) {
					tab = 2;
				}
				else if(item.status == 733){
					tab = 3;
				}
				else if(item.status == 734){
					tab = 4;
				}

				window.location.href = Config.Url_Root + "AMA/InsertUpdateAMA?decId=" + item.id + "&tab=" + tab + "&ishight=6"; 
            },
            removeDe: function (id) {
				var self = this;
                bootbox.confirm("Bạn có chắc xóa tờ khai này!", function(resultCon){
                    if(resultCon)
                    {
                        var token = $('#hdfToken').val();
                        utils.Loading();
                        $.ajax({
                            type: 'POST',
							url: Config.API_Login + "agency/DeleteAMA",
							data: JSON.stringify({ 
								id: id
                            }),
                            headers: {
                                "Authorization": "Bearer " + token
                            },
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {
                                //console.log(data);
                                debugger;
                                utils.unLoading();
								if (data.ResponseCode > 0) {
									utils.Message("Thành công");
									self.getList();
								}
								else {
									utils.Message(data.Description);
								}

                            },
                            error: function (data) {
                                bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                                return;
                            }
                        });
                    }
                });

            },
        },
        mounted() {
            this.init();
            this.getList(0);

        },
        computed: {
        }

   });
</script>