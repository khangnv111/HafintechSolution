


<div id="loginbox" style="transform: translate(-50%, -50%); top: 40%; left: 50%; position: fixed; z-index: 111">
    <div class="control-group normal_text">
        <b style="font-size:18px;">QUÊN MẬT KHẨU</b>
        <b onclick="utils.closeAll();" class="icClose">X</b>
    </div>

    <div class="control-group" id="get-new-password"> 
		
		<div class="controls">
			<div class="main_input_box">
				<b style="color: #ff0000">{{errorText}}</b>
			</div>
			<div class="main_input_box">
				<label style="text-align:left; margin-left:12%; font-weight:bold">Email</label>
				<input type="text" class="form-control" placeholder="Nhập Email" v-model="data.username" />
			</div>
			@*<div class="main_input_box">
				<label style="text-align:left; margin-left:12%; font-weight:bold">Mật khẩu</label>
				<input type="password" class="form-control" placeholder="Nhập mật khẩu" v-model="passWord" />
			</div>*@
			<div class="main_input_box">
				<br />
				<a class="btn btn-primary" style="display:inline-block; max-width:150px; text-transform:uppercase" v-on:click="Confirm()">Xác nhận</a>
			</div>
		</div>
    </div>
</div>
<script src="~/Content/js/vue.min.js"></script>

<script type="text/javascript"> 

	var getPass = new Vue({
		el: '#get-new-password',
		data: {
			data: {
			}, 
			errorText: "",
			passWord: "",
		},
		methods: {
			init: function () {
				this.data.username = ""; 
			}, 
			Confirm: function () {
				if (!this.data.username) {
					this.errorText = "Bạn chưa nhập email";
					return;
				}

				if (!Vali.validateEmail(this.data.username)) {
					this.errorText = "Email bạn nhập không đúng định dạng";
					return;
				}
				
				var self = this;
				var token = $('#hdfToken').val();

				utils.Loading();
				$.ajax({
					type: 'POST',
					url: Config.API_Login + "mail/SendMailForgotPassword",
					data: JSON.stringify({
						"Email": self.data.username
					}),
					contentType: "application/json; charset=utf-8",
					dataType: "json", 
					success: function (data) {
						utils.unLoading();

						if (data.ResponseCode > 0) {
							utils.closeAll();
							utils.Message("Mời bạn vào email để lấy lại mật khẩu!");
						}
						else {
							self.errorText = data.Description;
						}
					},
					error: function (data) {
						utils.unLoading();
						utils.Message("Hệ thống bận, vui lòng quay lại sau!"); 
					}
				});
			},
		},
		mounted() {
			var self = this;
			this.init();
		},

	}); 
</script>