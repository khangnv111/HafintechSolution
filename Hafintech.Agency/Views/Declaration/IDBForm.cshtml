
@{
    ViewBag.Title = "MIDForm";
    Layout = "~/Views/Shared/_LayoutDeclaration.cshtml";
}

<div class="row-fluid" id="idb">
    <div class="span12">
        @*<h4>Tờ khai nhập khẩu giá trị thấp >> Lấy thông tin tờ khai</h4>*@

        <div class="widget-box">
            <div class="widget-title">
                <span class="icon"> <i class="icon-align-justify"></i> </span>
                <h5>Lấy thông tin tờ khai hải quan</h5>
            </div>
            <div class="widget-content nopadding">
                <div class="form-horizontal">

                    <div class="row-fluid">
                        <div class="span12">

                            <div class="control-group span12">
                                <label class="control-label">Số tờ khai </label>
                                <div class="controls">

                                    <input style="width:350px" type="text" class="span5" id="" name="" placeholder="" required v-model="dclNo" />

                                    <button v-if="submitTT" class="btn btn-success" style="margin-left: 20px;" v-on:click="submit(3)">Lấy thông tin</button>
                                    <button v-if="submitUSB" class="btn btn-success" style="margin-left: 20px;" v-on:click="SubmitSign(3)">Lấy thông tin</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> 
<script src="~/Content/js/signkey/idb-onload.trinhky.js"></script>
<script> 
    var app = new Vue({
        el: '#idb',
		data: {
			data: {},
            dclNo: '',
            statusTK: 0,
			messTK: '',
			//ẩn hiện submit theo tk
			submitTT: false,
			submitUSB: false,
        },
		methods: {
			init: function () {
				//Check hiện button submit
				this.submitTT = Vali.CheckButtonSubmit().submitTT;
				this.submitUSB = Vali.CheckButtonSubmit().submitUSB;

			},
            submit: function (status) {
                
                var token = $('#hdfToken').val();
                if (!this.dclNo) {
                    bootbox.alert("Chưa nhập tờ khai");
                    return;
				}
				utils.Loading();
                $.ajax({
                    type: 'POST',
                    url: Config.API_Login + "agency/submit",
					data: JSON.stringify({
						"dclNo": this.dclNo.trim(),
                        status: status,
                    }),
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                        utils.unLoading();
                        if (data) {

							if (data.ResponseCode > 0 && data.Data != null) {
								window.location.href = Config.Url_Root + "Declaration/HightValueDeInsert?IdDec=" + data.Data.dclId + "&ishight=2&tab=2";
							}
							else if (data.ResponseCode == -100001) {
								bootbox.alert("Tờ khai không tồn tại");
							}
							else {
								bootbox.alert(JSON.stringify(data.Data));
								mess_GP.lstMess = data.Data.object;
							}
                        }
                    },
                    error: function (data) {
                        bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                        utils.unLoading();
                        return;
                    }
                });
            },
            SubmitSign: function (status) {
                //debugger;
                if ($("#downSignkey").val() == 1) {
                    bootbox.confirm("Bạn chưa có Chữ ký số hoặc Chữ số ký chưa cập nhật. <br> Mời bạn tải Chữ ký số", function (res) {
                        if (res) {
                            downTK();
                        }
                    });
                    return;
                }

                if (!this.dclNo) {
                    bootbox.alert("Chưa nhập tờ khai");
                    return;
                }

                this.statusTK = status; 
                var data = {
                    //"dclId": this.data.dclId,
                    "dclNo": this.dclNo.trim(),
                    "status": status
                }
                utils.Loading();
                var xhttp = new XMLHttpRequest();
                xhttp.withCredentials = true;
                xhttp.onreadystatechange = function () {
                    
                    if (this.readyState == 4 && this.status == 200) {
                        utils.unLoading();
                        var jsonObj = JSON.parse(xhttp.responseText); 
                        if (jsonObj["ResponseCode"] >= 0) {
                            var ediStr = jsonObj["Data"].replace('"', ''); 
							app.messTK = ediStr;
                            sendWsJs(CMD.SIGN_TXT, FORMAT.BINARY, [ediStr]);
                        } 
                        else { 
							app.messTK = xhttp.responseText;
                        }
                    }
                };
                xhttp.open("POST", Config.API_Login + "Agency/GetEdiToSign", true);
                xhttp.setRequestHeader("content-type", "application/json");
                xhttp.send(JSON.stringify(data));
            },
        
		},
		mounted() {
			var self = this;
			this.init(); 
			windowOnload();
		},
    });
</script>