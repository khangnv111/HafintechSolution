
@{
	ViewBag.Title = "ListProduct";
	Layout = "~/Views/Shared/_LayoutDeclaration.cshtml";
}

<div class="row-fluid" id="ida-list-product">
	<div class="span12">
		<div class="row-fluid">
			<div class="span12" id="divBtn">
				<h4>Danh sách hàng hóa</h4>
				<a v-on:click="ViewDeclaration(@ViewBag.tab)" class="btn btn-success">Tờ khai</a>
				<a class="btn btn-warning">Danh sách hàng</a>
				<a class="btn btn-success">Chỉ thị của hải quan</a>
				<a v-on:click="ViewResult(@ViewBag.IdDec, @ViewBag.dclNo, @ViewBag.tab)" class="btn btn-success">Kết quả xử lý tờ khai</a>
				<a class="btn btn-success">Quản lý tờ khai</a>

			</div>
		</div>

		<div class="row-fluid">
			<input type="hidden" id="dclId" name="dclId" value="@ViewBag.IdDec" />
			<a v-show="status == 0 || status == 1 || status == 3 || status == 6 || status == 21" onclick="Decla.ShowPopAddProduct(@ViewBag.IdDec)" class="btn btn-success" style="float:right; margin: 2px 5px;">
				<i class="fa fa-plus-circle"></i> Thêm hàng
			</a>
		</div> 

		<div>
			<div style="clear:both"></div>
			<div class="widget-title">
				<span class="icon"><i class="icon-align-justify"></i></span>
				<h5>Chi tiết danh sách hàng</h5>
			</div>

			<div style="overflow-x:auto; overflow-y: auto;">
				<table id="listContainerProduct" class="table table-bordered data-table table-striped with-check" role="grid" aria-describedby="example1_info">
					<thead>
						<tr>
							<th style="min-width:50px">STT</th>
							<th>Mã số hàng hóa</th>
							<th style="min-width:100px">Tên hàng(Mô tả chi tiết)</th>
							<th>Xuất xứ</th>
							<th>Số lượng</th>
							<th>Đợn vị tính(SL)</th>
							<th style="min-width:100px">Số lương thực tế</th>
							<th style="min-width:100px">Đơn giá hóa đơn</th>
							<th style="min-width:100px">Trị giá hóa đơn</th>
							<th style="min-width:100px">Trị giá tính thuế</th>
							<th style="min-width:100px">Mã biểu thuế NK</th>

							<th style="min-width:150px" v-show="status == 0 || status == 3 || status == 21 || status == 1|| status == 6">Thao tác</th>
						</tr>
					</thead>
					<tbody>
						<tr v-for="(item, index) in lstProduct">
							<td>{{index+1}}</td>
							<td>
								<a href="javascript:;" v-on:click="viewDetailProduct(item.productId)">{{item.hSCd}}</a>
							</td>
							<td>{{item.itemName}}</td>
							<td>{{item.placeOriginCd}}</td>
							<td>{{item.qtt1}}</td>
							<td>{{item.qttUnitCd1}}</td>
							<td>{{item.qtt2}}</td>
							<td>{{item.invUnitPrice}}</td>
							<td>{{item.invValue}}</td>
							<td>{{item.cstValSystem}}</td>
							<td>{{item.importTaxClfCd}}</td>
							<td v-show="status == 0 || status == 3|| status == 21 || status == 1|| status == 6">
								<a href="javascript:;" v-on:click="viewDetailProduct(item.productId)" class="btn btn-warning">Sửa</a>
								<a href="javascript:;" v-on:click="delProduct(item.productId)" class="btn btn-danger">Xóa</a>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
    var app = new Vue({
        el: '#ida-list-product',
        data: {
			data: {},
			status: 0,
			lstProduct: [],
			dclId: '@ViewBag.IdDec',
        },
		methods: {
			loadInfo: async function () {
				try {
					var token = $('#hdfToken').val();
					var dclId = this.dclId;
					if (!dclId || dclId <= 0) { 
						return;
					}
					const response = await axios.get(Config.API_Login + "import/GetDeclarationDetail?dclId=" + dclId,
						{
							headers: { "Authorization": "Bearer " + token }
						});
					var res = response.data;
					if (res.ResponseCode >= 0) {
						this.status = res.Data.status;
					} 
				} catch (error) {
					console.error(error);
				}
			},
            getList: async function (id) {
                try {
                    var token = $('#hdfToken').val();
                    const response = await axios.get(Config.API_Login + "tax/SearchHighProduct?declarationID=" + id,
                        {
                            headers: { "Authorization": "Bearer " + token }
                        });
                    var res = response.data;
                    if (res.ResponseCode >= 0)
                        this.lstProduct = response.data.Data;
                } catch (error) {
                    console.log(error);
                }
			}, 
			viewDetailProduct: function (idPro) {

				var urlData = Config.Url_Root + "Declaration/PopInsertHangHoa";
				if (this.status != 0 && this.status != 3 && this.status != 21 && this.status != 1 && this.status != 6)
					urlData = Config.Url_Root + "Declaration/ViewProductIID"

                utils.Loading();
                $.ajax({
					type: 'GET',
					url: urlData,
					data: {
						IdDec: this.dclId,
						proId: idPro,
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    processData: true,
                    crossDomain: true,
                    xhrFields: { withCredentials: true },
                    cache: false,
                    success: function (data) {
                        utils.unLoading();
						utils.ShowOverLay();

						$("BODY").append('<div id="popupwrap" style="z-index: 111;left: 50%;top: 50%; position: fixed; transform: translate(-50%, -50%); max-height: 730px; width: 75%;overflow: auto;"></div>');
                        $("#popupwrap").html(data);

                    },
                    error: function (data) {
                        utils.unLoading();
                        bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");

                    }
                })
			}, 
            delProduct: function(id){
				var self = this;
                bootbox.confirm("Bạn có chắc muốn xóa hàng hóa này", function(res){
                    if(res){
                        utils.Loading();
                        var token = $('#hdfToken').val();
                        $.ajax({
                            type: 'GET',
                            url: Config.API_Login + "tax/DeleteProduct",
                            data: {
                                productId: id
                            },
                            headers: {
                                "Authorization": "Bearer " + token
                            },
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {
                                //console.log(data);
                                utils.unLoading();
                                if (data) {
                                    if (data.ResponseCode > 0) {
										bootbox.alert("Xóa hàng hóa thành công");
										app.getList(self.dclId);
                                    }
                                    else {
                                        bootbox.alert(data.Description);
                                    }
                                }
                                else {
                                    bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                                }
                            },
                            error: function (data) {
                                bootbox.alert("Hệ thống bận, vui lòng quay lại sau!");
                                return;
                            }
                        });
                    }
                });
            },
			ViewResult: function (id, dclNo, tab) {
				var url_string = window.location.href
				var url = new URL(url_string);
				var ishight = url.searchParams.get("ishight");

				window.location.href = Config.Url_Root + "Declaration/IDA_Result?IdDec=" + id + "&tab=" + tab + "&dclNo=" + dclNo + "&ishight=" + ishight;
			},
			ViewDeclaration: function (tab) { 
				var url_string = window.location.href
				var url = new URL(url_string);
				var ishight = url.searchParams.get("ishight");

				window.location.href = Config.Url_Root + "Declaration/HightValueDeInsert?IdDec=" + this.dclId + "&tab=" + tab + "&ishight=" + ishight;
			},
        },
        mounted() {
            //debugger;
            var id = '@ViewBag.IdDec';
            if(id && id > 0){
                this.getList(id);
			}
			this.loadInfo();
        },
    });
</script>